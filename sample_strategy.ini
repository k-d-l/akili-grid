# This file contains the various settings for the grid strategy.
# All prices are on the base currency e.g with BTC/USDT the base currency is BTC.

# Each setting is preceded by a comment explaining what it does. 
# All settings are in this file and are mandatory and in lowercase.

[orders]
# Total number of active orders above current price.
above = 1
# Total number of active orders above current price.
below = 1
# Order size of each grid in base currency.
size = 0.3

[type]
# Type of order to be placed above current price.
above = sell
# Type of order to be placed below current price.
below = buy
# Specify leverage of grid (if using futures).
leverage = 3
# Specify market in exchange to use (BTC/USDT BTC-PERP etc).
market = SOL-PERP

[bounds]
# Lowest grid price to place orders or 0 to place orders all the way down to zero.
low = 30
# Highest grid price to place orders. For infinite grid, place a large number here like 999999999.
high = 40
# Price difference between grid orders (cannot be zero) in base currency.
step = 0.05

[start]
# Grid gets activated when price goes below this. For immediate activation place a super large number here.
low = 0
# Grid gets activated when price goes above this setting or 0 to activate immediately.
high = 30
# Amount of crypto in base currency for starting order. Use for bullish or bearish grids. 
# If equal to grid order size then it is a neutral grid.
amount = 0.3
# Order type to start grid with (ignored if above amount is zero).
order = buy
# Location to place starting order - above or below current price. 
# Generally if the start order is buy, the location is below and if it is sell, the location is above current price.
location = below

[stop]
# Grid stops when price goes below this setting.
low = 0
# Grid stops when price goes above this setting.
high = 1000000
# If set to yes, active position will be closed grid stops.
close = no
# How long to run bot in seconds.
time = 3600


# For the below, I'm still debating weather to use this INI or ENVs.
# I'll probably put all settings in this file including exchange shenanigans when I release the first version.
# For now, use Environment variables if you dare to run the grid before I'm done with the first release ðŸ¤£

[exchange]
# Specify exchange to use use the id column of the table that can be found here:
# https://github.com/ccxt/ccxt/wiki/Exchange-Markets
name = ftx
# Exchange API key should be stored in the environment variable named apiKey.
# Place your Exchange API secret in an environment variable named secret.
# These are placeholders for now...
apikey =
secret = 

# Also placeholders for now, please these in your environment variables.
[telegram] 
# Place your telegram bot token here. To create a bot have a look at:
# https://core.telegram.org/bots#how-do-i-create-a-bot 
key =
# Your telegram (or your group's chat ID) to receive updates. To get your ID see:
# https://diyusthad.com/2022/03/how-to-get-your-telegram-chat-id.html 
chatid =

